/*
 * stm32f446xx_usart_driver.h
 *
 *  Created on: 17-Jul-2022
 *      Author: gn260
 */

#ifndef INC_STM32F446XX_USART_DRIVER_H_
#define INC_STM32F446XX_USART_DRIVER_H_


#include "stm32f446xx.h"

// Configuration structure for USARTx peripheral
typedef struct{

	uint8_t USART_Mode;
	uint32_t USART_Baudrate;
	uint8_t USART_NoOfStopBits;
	uint8_t USART_WordLength;
	uint8_t USART_ParityControl;
	uint8_t USART_HWFlowControl;

}USART_Config_t;


// Handle structure for USARTx peripheral
typedef struct{

	USART_RegDef_t *pUSARTx;
	USART_Config_t	USART_Config;

}USART_Handle_t;


// USART Peripheral clock control
void USART_PeriClockControl(USART_RegDef_t *pUSARTx, uint8_t EnOrDi);


// USART peripheral initialization and de-initialization
//void USART_Init(USART_Handle_t *pUSARTx);
//void USART_DeInit(USART_RegDef_t *pUSARTx);


// Data send and receive
//void USART_SendData(USART_RegDef_t *pUSARTx, uint8_t *pTxBuffer, uint32_t Len);
//void USART_ReceiveData(USART_RegDef_t *pUSARTx, uint8_t *pRxBuffer, uint32_t Len);

//uint8_t USART_SendDataInterruptBased(USART_Handle_t *pUSARTHandle, uint8_t *pTxBuffer, uint32_t Len);
//uint8_t USART_ReceiveDataInterruptBased(USART_Handle_t *pUSARTHandle, uint8_t *pRxBuffer, uint32_t Len);


// IRQ Configuration and ISR Handling
void USART_IRQInterruptConfig(uint8_t IRQNumber, uint8_t EnOrDi);
void USART_IRQPriorityConfig(uint8_t IRQNumber, uint8_t IRQPriority);
//void USART_IRQHandling(USART_Handle_t *pHandle);


// Other USART Peripheral APIs
uint8_t USART_GetFlagStatus(USART_RegDef_t *pUSARTx, uint32_t FlagName);
void USART_PeripheralControl(USART_RegDef_t *pUSARTx, uint8_t EnOrDi);
//void USART_SSIConfig(USART_RegDef_t *pUSARTx, uint8_t EnOrDi);
//void USART_SSOEConfig(USART_RegDef_t *pUSARTx, uint8_t EnOrDi);
//void USART_ClearFlag(USART_RegDef_t *pUSARTx, uint16_t StatusFlagName);
//void USART_CloseTransmission(USART_Handle_t *pHandle);
//void USART_CloseReception(USART_Handle_t *pHandle);

// Application callback
void USART_ApplicationEventCallback(USART_Handle_t *pUSARTHandle, uint8_t ApplicationEvent);






#endif /* INC_STM32F446XX_USART_DRIVER_H_ */
